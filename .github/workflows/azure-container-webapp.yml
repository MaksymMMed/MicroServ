name: Build and deploy multiple containers to an Azure Web App

env:
  AZURE_WEBAPP_NAME: ${{ secrets.AZURE_WEBAPP_NAME }}
  ACR_NAME: ${{ secrets.ACR_NAME }}

on:
  push:
    branches: [ "master" ]
  workflow_dispatch:

permissions:
  contents: read
  id-token: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Azure Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.ACR_NAME }}.azurecr.io
          username: ${{ secrets.ACR_ADMIN }}
          password: ${{ secrets.ACR_PASSWORD }}

      - name: Lowercase the repo name and username
        run: echo "REPO=${GITHUB_REPOSITORY,,}" >>${GITHUB_ENV}

      - name: Build and push SenderAPI image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ env.ACR_NAME }}.azurecr.io/senderapi:dev
          file: ./SenderAPI/Dockerfile

      - name: Build and push ReceiverAPI image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ env.ACR_NAME }}.azurecr.io/receiverapi:dev
          file: ./ReceiverAPI/Dockerfile

  deploy:
    permissions:
      contents: none
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Development'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
    - name: Azure Login
      uses: azure/login@v1
      with:
        client-id: ${{ secrets.AZURE_USER_ID }}
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

    - name: Deploy to Azure Web App
      id: deploy-to-webapp
      uses: azure/webapps-deploy@v2
      with:
        app-name: ${{ env.AZURE_WEBAPP_NAME }}
        images: |
          ${{ env.ACR_NAME }}.azurecr.io/senderapi:dev
          ${{ env.ACR_NAME }}.azurecr.io/receiverapi:dev
        configuration-file: docker-compose.yml
      env:
        ACR_NAME: ${{ secrets.ACR_NAME }}
