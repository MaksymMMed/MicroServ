version: '3.4'

services:
  senderapi:
    image: ${DOCKER_REGISTRY-}senderapi
    environment:
      ASPNETCORE_ENVIRONMENT: Development
    depends_on:
        mssql:
            condition: service_healthy
            restart: true
    volumes:
      - ${APPDATA}/Microsoft/UserSecrets:/home/app/.microsoft/usersecrets:ro
      - ${APPDATA}/ASP.NET/Https:/home/app/.aspnet/https:ro

  receiverapi:
    image: ${DOCKER_REGISTRY-}receiverapi
    environment:
      ASPNETCORE_ENVIRONMENT: Development
    depends_on:
        mssql:
            condition: service_healthy
            restart: true
    volumes:
      - ${APPDATA}/Microsoft/UserSecrets:/home/app/.microsoft/usersecrets:ro
      - ${APPDATA}/ASP.NET/Https:/home/app/.aspnet/https:ro

  mssql:
    image: mcr.microsoft.com/mssql/server:2022-latest
    container_name: mssql
    ports:
      - "1433:1433"
    environment:
      SA_PASSWORD : "YourStrong@Password"
      ACCEPT_EULA: "Y"
    volumes:
      - mssql_data:/var/opt/mssql
    healthcheck:
      test: [ "CMD-SHELL", "/opt/mssql-tools18/bin/sqlcmd -U sa -P YourStrong@Password -Q 'SELECT 1' -C || exit 1" ]
      interval: 3s
      timeout: 3s
      retries: 5


volumes:
  mssql_data: